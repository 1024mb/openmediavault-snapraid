#!/bin/sh
#
# Copyright (C)      2013 OpenMediaVault Plugin Developers
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

SNAPRAID_CONFIG="/etc/snapraid.conf";
POOL_DIR="/media/pool"

# Create snapraid config file
cat <<EOF > ${SNAPRAID_CONFIG}
# this file is automatically generated.
EOF

xmlstarlet sel -t -m "//services/snapraid" \
    -i "parity != ''" -v "concat('parity ', parity)" -n -b \
    -i "qparity != ''" -v "concat('q-parity ', qparity)" -n -b \
    -i "blocksize != ''" -v "concat('block_size ', blocksize)" -n -b \
    -i "autosave != ''" -v "concat('autosave ', autosave)" -n -b \
    -i "nohidden[. = '1']" -o "nohidden" -n -b \
    -i "pool[. = '1']" -o "pool ${POOL_DIR}" -b \
${OMV_CONFIG_FILE} | xmlstarlet unesc >> ${SNAPRAID_CONFIG}

# Add default content
#echo "content /var/snapraid/content" >> ${SNAPRAID_CONFIG}

# Process content
count=$(omv_config_get_count "//services/snapraid/contents/content")
index=0
while [ ${index} -le ${count} ]; do

    contentroot=$(omv_config_get "//services/snapraid/contents/content[position()=${index}]/contentroot")

    if [ "${contentroot}" != "" ]; then
        echo "content ${contentroot}" >> ${SNAPRAID_CONFIG}
    fi

    index=$(( ${index} + 1 ))
done

# Process data
count=$(omv_config_get_count "//services/snapraid/datas/data")
index=0
while [ ${index} -le ${count} ]; do

    name=$(omv_config_get "//services/snapraid/datas/data[position()=${index}]/name")
    dataroot=$(omv_config_get "//services/snapraid/datas/data[position()=${index}]/dataroot")

    if [ "${dataroot}" != "" ]; then
        echo "disk ${name} ${dataroot}" >> ${SNAPRAID_CONFIG}
    fi

    index=$(( ${index} + 1 ))
done

# Add default excludes
echo "exclude *.bak" >> ${SNAPRAID_CONFIG}
echo "exclude *.unrecoverable" >> ${SNAPRAID_CONFIG}
echo "exclude /tmp/" >> ${SNAPRAID_CONFIG}
echo "exclude lost+found/" >> ${SNAPRAID_CONFIG}
echo "exclude .content" >> ${SNAPRAID_CONFIG}
echo "exclude aquota.group" >> ${SNAPRAID_CONFIG}
echo "exclude aquota.user" >> ${SNAPRAID_CONFIG}

# Process excludes
count=$(omv_config_get_count "//services/snapraid/excludes/exclude")
index=0
while [ ${index} -le ${count} ]; do

    exclusion=$(omv_config_get "//services/snapraid/excludes/exclude[position()=${index}]/exclusion")

    if [ "${exclusion}" != "" ]; then
        echo "exclude ${exclusion}" >> ${SNAPRAID_CONFIG}
    fi

    index=$(( ${index} + 1 ))
done

# Process includes
count=$(omv_config_get_count "//services/snapraid/includes/include")
index=0
while [ ${index} -le ${count} ]; do

    inclusion=$(omv_config_get "//services/snapraid/includes/include[position()=${index}]/inclusion")

    if [ "${inclusion}" != "" ]; then
        echo "include ${inclusion}" >> ${SNAPRAID_CONFIG}
    fi

    index=$(( ${index} + 1 ))
done

omv-mkconf samba

if [ "$(omv_config_get "//services/snapraid/pool")" != "0" ]; then
    /usr/local/bin/snapraid pool
fi

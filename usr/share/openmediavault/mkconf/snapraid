#!/bin/sh
#
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2013-2014 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

SNAPRAID_FILENAME="snapraid.conf"
SNAPRAID_CONFIG="/etc/${SNAPRAID_FILENAME}"
POOL_DIR="/media/pool"

SERVICE_XPATH_NAME="snapraid"
SERVICE_XPATH="/config/services/${SERVICE_XPATH_NAME}"

DRIVES="${SERVICE_XPATH}/drives/drive"
RULES="${SERVICE_XPATH}/rules/rule"

OMV_VERSION="$(dpkg -l | grep 'openmediavault ' | awk '{print $3}')"
PLUGIN_VERSION="$(dpkg -l | grep openmediavault-snapraid | awk '{print $3}')"

# Create snapraid config file
cat <<EOF > ${SNAPRAID_CONFIG}
# this file was automatically generated from OpenMediaVault $OMV_VERSION
# and 'openmediavault-snapraid' $PLUGIN_VERSION 
EOF

xmlstarlet sel -t -m "${SERVICE_XPATH}" \
    -i "blocksize != ''" -v "concat('block_size ', blocksize)" -n -b \
    -i "autosave != ''" -v "concat('autosave ', autosave)" -n -b \
    -i "nohidden[. = '1']" -o "nohidden" -n -b \
    -i "pool[. = '1']" -o "pool ${POOL_DIR}" -b \
${OMV_CONFIG_FILE} | xmlstarlet unesc >> ${SNAPRAID_CONFIG}

# Add default content
#echo "content /var/snapraid/content" >> ${SNAPRAID_CONFIG}

# Process drives
count=$(omv_config_get_count "${DRIVES}")
index=1
countp=0
while [ ${index} -le ${count} ]; do

    content=$(omv_config_get "${DRIVES}[position()=${index}]/content")
    data=$(omv_config_get "${DRIVES}[position()=${index}]/data")
    parity=$(omv_config_get "${DRIVES}[position()=${index}]/parity")
    path=$(omv_config_get "${DRIVES}[position()=${index}]/path")
    name=$(omv_config_get "${DRIVES}[position()=${index}]/name")
    label=$(omv_config_get "${DRIVES}[position()=${index}]/label")

    if [ "${path}" != "" ]; then
		echo "#####################################################################" >> ${SNAPRAID_CONFIG}
		echo "# OMV-Name: ${name}  Drive Label: ${label}" >> ${SNAPRAID_CONFIG}
        if [ "${content}" -eq "1" ]; then
            echo "content ${path}/snapraid.content" >> ${SNAPRAID_CONFIG}
        fi

        if [ "${data}" -eq "1" ]; then
            echo "disk ${name} ${path}" >> ${SNAPRAID_CONFIG}
        fi

        if [ "${parity}" -eq "1" ]; then
            countp=$(( ${countp} + 1 ))

            if [ "${countp}" -le 6 ]; then
                if [ "${countp}" != "1" ]; then
                    echo "${countp}-parity ${path}/snapraid.${countp}-parity" >> ${SNAPRAID_CONFIG}
                else
                    echo "parity ${path}/snapraid.parity" >> ${SNAPRAID_CONFIG}
                fi
            fi
        fi
		echo >> ${SNAPRAID_CONFIG}
    fi

    index=$(( ${index} + 1 ))
done

# Add default excludes
cat <<EOF >> ${SNAPRAID_CONFIG}
exclude *.bak
exclude *.unrecoverable
exclude /tmp/
exclude lost+found/
exclude .content
exclude aquota.group
exclude aquota.user
exclude ${SNAPRAID_FILENAME}*
EOF

# Process rules
count=$(omv_config_get_count "${RULES}")
index=1
while [ ${index} -le ${count} ]; do

    rtype=$(omv_config_get "${RULES}[position()=${index}]/rtype")
    rule=$(omv_config_get "${RULES}[position()=${index}]/rule")

    if [ "${rule}" != "" ]; then
        if [ "${rtype}" != "0" ]; then
            echo "include ${rule}" >> ${SNAPRAID_CONFIG}
        else
            echo "exclude ${rule}" >> ${SNAPRAID_CONFIG}
        fi
    fi

    index=$(( ${index} + 1 ))
done

# backup snapraid.conf
count=$(omv_config_get_count "${DRIVES}")
index=1
while [ ${index} -le ${count} ]; do

    data=$(omv_config_get "${DRIVES}[position()=${index}]/data")
    path=$(omv_config_get "${DRIVES}[position()=${index}]/path")
	
	# do backups - keep the last 3
    if [ "${path}" != "" ]; then
        if [ "${data}" -eq "1" ]; then
            if [ -f "${path}/${SNAPRAID_FILENAME}.bak" ]; then
                rm -f "${path}/${SNAPRAID_FILENAME}.bak"
            fi

            if [ -f "${path}/${SNAPRAID_FILENAME}" ]; then
                mv "${path}/${SNAPRAID_FILENAME}" "${path}/${SNAPRAID_FILENAME}.bak"
            fi

            cp ${SNAPRAID_CONFIG} ${path}/
        fi
    fi

    index=$(( ${index} + 1 ))
done

omv-mkconf samba

if [ "$(omv_config_get "${SERVICE_XPATH}/pool")" != "0" ]; then
    /usr/bin/snapraid pool
fi
